user nginx;
worker_processes auto;
pid /run/nginx.pid;

events {
        worker_connections 768;
}

http {
        proxy_connect_timeout 180;
        proxy_send_timeout 180;
        proxy_read_timeout 180;
        send_timeout 180;
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 180;
        types_hash_max_size 2048;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" "$request_uri" "$uri"'
                      '"$http_user_agent" "$http_x_forwarded_for"';

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        gzip on;

        include /etc/nginx/sites-enabled/*;

        upstream front {
                server front:3000;
        }

        upstream main {
                server main:8080;
        }

        server {
                listen 80;
                listen [::]:80;
                server_name economicus.kr www.economicus.kr;

                location ~ /.well-known/acme-challenge {
                        allow all;
                        root /usr/share/nginx/html;
                }

                location / {
                        return 301 https://$host$request_uri;
                }
        }

        server {
                listen 443 ssl;
                server_name economicus.kr www.economicus.kr;

                ssl_certificate /etc/letsencrypt/live/economicus.kr/fullchain.pem;
                ssl_certificate_key /etc/letsencrypt/live/economicus.kr/privkey.pem;

                include /etc/letsencrypt/options-ssl-nginx.conf;
                ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

                location / {
                        if ( $host !~* ^(economicus.kr|www.economicus.kr)$ ) {
                                return 444;
                        }
                        proxy_pass http://front;
                        proxy_redirect off;
                        proxy_set_header Host $host;
                        proxy_set_header X-Real-IP $remote_addr;
                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header X-Forwarded-Host $server_name;
                        proxy_set_header   X-Forwarded-Proto $scheme;
                }

                location /v1 {
                        proxy_pass http://main;
                        proxy_redirect off;
                        proxy_set_header Host $host;
                        proxy_set_header X-Real-IP $remote_addr;
                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header X-Forwarded-Host $server_name;
                        proxy_set_header   X-Forwarded-Proto $scheme;
                }
        }
}